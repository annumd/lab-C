#include <stdio.h>
int s[10][10],t[10][10],s1[100][100],s2[100][100];
int add();
int transverse();
int sparse();

void main()
{
	int r,c,a[][],b[][];
	printf(" Enter number of rows and columns: \n");
	scanf("%d%d",&r&c);
	printf("Enter elements of matrix a: ");
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	sparse() //convert matrix to sparse representation

	printf("-array recorded- \n");
	do
	{
		printf(" Do you want to \n (1) add \n(2)transrse \n ");
		printf(" Enter your choice: ");
		scanf("%d",&ch);
		if (ch==1)
		{
			add() /// a is array name
		}
		if (ch==2)
		{
			transverse(a,len);	
		}
	
		printf("\n Do you want to continue? (PRESS 1 TO CONTINUE) : \n");
		scanf("%d",&con);
	}while(con==1);
}

void sparse()
{
	int k=0,i,j,;
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			if(a[i][j]!=0)
			{
				s[k].r=i;
				s[k].c=j;
				s[k].val=a[i][j];
				k++;
			}
		}
	}

	return k;
	for(i=0;i<s[0][2];i++)
	{
		for(j=0;j<3;j++)
		{
			printf("%d\t",s[i][j]);	
		}
		printf("\n");
	}

}
void add()
{
	int a[][],b[][],r1,c1,r2,c2,c[][],i=0,j=0,k=0;
	printf("-Enter first matrix-\n");
	printf(" Enter number of rows and columns: \n");
	scanf("%d%d",&r&c);
	printf("Enter elements of matrix a: ");
	for(i=0;i<r1;i++)
	{
		for(j=0;j<c1;j++)
		{
			scanf("%d%d",&a[i][j]);
		}
	}
	
	printf("-Enter second matrix-\n");
	printf(" Enter number of rows and columns: \n");
	scanf("%d%d",&r&c);
	printf("Enter elements of matrix a: ");
	for(i=0;i<r2;i++)
	{
		for(j=0;j<c2;j++)
		{
			scanf("%d%d",&b[i][j]);
		}
	}
	if((a[0][0]==b[0][0])&& (a[0][1]==b[0][1]))
	{
		while(i<r && j<c)
		{
			if((a[i][0]=b[j][o])&&(a[0][1]==b[0][1]))
			{ 
				c[k][0]=a[i][0];
				c[k][1]=a[i][1];
				c[k][2]=a[i][2]+b[j][2];
				i++;j++;k++;
			}
		}
	
	else
	{
		printf(" matrix cannot be added ");
	}
	else if (a[i][0]==b[j][0])
	{
		if (a[i][1]<b[j][1])
		{
			c[k][0]=a[i][0];
			c[k][1]=a[i][1];
			c[k][2]=a[i][2];
			i++;
			k++;
		}
	
		else
		{
			c[k][0]=b[j][0];
			c[k][1]=b[j][1];
			c[k][2]=b[j][2];
			k++;
			j++;
		}
	}
	else
	{
		if(a[i][0]<b[j][0])
		{
			c[k][0]=a[i][0];
			c[k][1]=a[i][1];
			c[k][2]=a[i][2];
			k++;
			i++;
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
/*	
	if(s1[i].r==s2[j].r && s1[i].c==s2[i].c)
	{
		c[k].r==s1[i].r;
		c[k].c=s2[j].c;
		c[k].val==s1[i].val+s2[j].val;
		i++;
		j++
	}
	else if(s1[i].r==s2[j].r && s1[i]c< s2[j].c)
	{
		c[k++]==s1[i++];
	}
	else
	{
		c[k++]==s2[j++];
	}
	k++;
	if(i<count)
	{
		c[k++]==s1[i++];
	}
	if(j<count)
	{
		c[k++]==s2[j++];
	}
	return c[][];
}
*/










