#include <stdio.h>
void sparse(int a[20][20],int r,int c);
void add(int a[20][20],int r ,int c);


void main()
{
	int r=0,c=0,a[20][20],i,j,ch,con=0;
	printf(" -MATRIX 1-\n");
	printf(" Enter number of rows : ");
	scanf("%d",&r);
	printf(" Enter number of columns: ");
	scanf("%d",&c);
	
	printf("\nEnter elements of matrix a: \n");
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	
	printf("\n---Matrix a---\n");
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			printf("%d\t",a[i][j]);
		}
		printf("\n"); // Move to the next line after printing a row
    	}	
	
	sparse(a,r,c); //convert matrix to sparse representation

	printf("-array recorded-\n\n");
	do
	{
		printf(" Do you want to \n(1)add\n(2)transverse \n ");
		printf(" Enter your choice: ");
		scanf("%d",&ch);
		if (ch==1)
		{
			add(a,r,c); /// a is array name
		}
		/*
		if (ch==2)
		{
			transverse(a,len);	
		}
		*/
	
		printf("\n Do you want to continue? (PRESS 1 TO CONTINUE) : \n");
		scanf("%d",&con);
	}while(con==1);
}

void sparse(int a[20][20],int r,int c) // works
{
	int s[20][20],i,j;
	int nonzero = 0; // Variable to count non-zero elements
	
	// Initialize the sparse matrix with dimensions and count
	s[0][0]=r; 
	s[0][1]=c;
	
	// Traverse the original matrix to fill sparse matrix `b`
    	int k = 1; // Start from 1 because b[0] contains dimensions
	
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			if(a[i][j]!=0) //identify non zero elements
			{
				s[k][0]=i;
				s[k][1]=j;
				s[k][2]=a[i][j];
				k++;
				nonzero++;  // Increment count of non-zero elements
			}
		}
	}
	s[0][2]=nonzero;	// Store the count of non-zero elements at the end of the sparse matrix
	
	
	// Print the sparse matrix
	printf("\n---SPARSE a---\n");
	printf("Row  Column  Value\n");
       	printf("%d\t%d\t%d\n",r,c,nonzero);

   	//sparse
	for(i=0;i<r;i++)
	{
		for(j=0;j<c;j++)
		{
			if (a[i][j] != 0) 
			{ 
               			printf("%d\t%d\t%d\n", i, j, a[i][j]);
            		}
		
		}
		printf("\n"); // Move to the next line after printing a row	
    	}
    	
}





void add(int a[20][20],int r,int c)
{
	int b[20][20],r2,c2, sum[40][40],i=1,j=1,k=1;
	
	//read the second matrix
	printf("-Enter second matrix-\n");
	printf(" Enter number of rows:");
	scanf("%d",&r2);
	printf(" Enter number of columns:");
	scanf("%d",&c2);
	
	//check if dimensions match
	if (r != r2 || c != c2) 
	{
        	printf("Matrix dimensions do not match. Addition not possible.\n");
        	return;
    	}
    	
	printf("Enter elements of matrix b: \n");
	for(i=0;i<r2;i++)
	{
		for(j=0;j<c2;j++)
		{
			scanf("%d",&b[i][j]);
		}
	}
	
	printf("\n---Matrix B---\n");
	for(i=0;i<r2;i++)
	{
		for(j=0;j<c2;j++)
		{
			printf("%d\t",b[i][j]);
		}
		printf("\n"); // Move to the next line after printing a row
    	}	
    	
	// Both matrices have the same non-zero element positions
	if((a[0][0]==b[0][0]) && (a[0][1]==b[0][1]))
	{
		while(i<r2 && j<c2)
		{
			if((a[i][0]=b[j][0])&&(a[i][1]==b[j][1]))
			{ 
				sum[k][0]=a[i][0];
				sum[k][1]=a[i][1];
				sum[k][2]=a[i][2]+b[j][2];
				i++;
				j++;
				//k++;
			}
		//}
	//}
	
	else if (a[i][0]==b[j][0])
	// Handle cases where elements are only in matrix `a`
	{
		if (a[i][1]<b[j][1])
		// If element in `a` comes before element in `b`, add it to the result
			{
				sum[k][0]=a[i][0];
				sum[k][1]=a[i][1];
				sum[k][2]=a[i][2];
				i++;
				//k++;
			}
	
		else
			// If element in `b` comes before element in `a`, add it to the result
			{
				sum[k][0]=b[j][0];
				sum[k][1]=b[j][1];
				sum[k][2]=b[j][2];
				k++;
				j++;
			}
			
	}
	
	// Handle cases where elements are only in matrix `a`
	else if (a[i][0]<b[j][0])
	{			
		sum[k][0]=a[i][0];
		sum[k][1]=a[i][1];
		sum[k][2]=a[i][2];
		k++;
		i++;		
	}	
	
	}
	}
	// Handle remaining elements in `a`
	while(i<r2)
		{
			sum[k][0]=a[i][0];
			sum[k][1]=a[i][1];
			sum[k][2]=a[i][2];
			i++;
			k++;
		}
		
	// Handle remaining elements in `b`
	while(j<c2)
		{
			sum[k][0]=b[j][0];
			sum[k][1]=b[j][1];
			sum[k][2]=b[j][2];
			j++;
			k++;
		}
		
		
	// Print the sparse matrix
	printf("SUM :\n");
	printf("Row  Column  Value\n");
       	//printf("%d\t%d\t%d\n",r,c,nonzero);

   	//sparse
	for(i=0;i<r2;i++)
	{
		for(j=0;j<c2;j++)
		{
			if (a[i][j] != 0) 
			{ 
               			printf("%d\t%d\t%d\n", i, j, sum[i][j]);
            		}
		
		}
		printf("\n"); // Move to the next line after printing a row	
    	}
}

	
	
